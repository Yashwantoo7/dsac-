#include <iostream>
#include <bits/stdc++.h>

using namespace std;


void getPre(Node* root,double target,stack<int>&stk){
    if(root==NULL)return;
    getPred(root->left,target,stk);
    if(root->val>target)return;
    stk.push(root->val);
    getPred(root->right,target,stk);
    return;
}

void getSuc(Node* root,double target,stack<int>&stk){
    if(root==NULL)return;
    getSuc(root->right,target,stk);
    if(root->val<target)return;
    stk.push(root->val);
    getSuc(root->left,target,stk);
    return;
}

void closestKValues(Node* root,double target,int k){
    if(root==NULL)return;
    stack<int>pre,suc;
    getPre(root,target,pre);
    getSuc(root,target,suc);
    
    vector<int>ans;
    for(int i=0;i<k;i++){
        if(pre.empty()){
            ans.pus_back(suc.top());
            suc.pop();
        }
        else if(suc.empty()){
            ans.push_back(pre.top());
            pre.pop();
        }
        else if(abs(pre.top()-target)<abs(suc.top()-target)){
            ans.push_back(pre.top();
            pre.pop();
        }
        else{
            ans.push_back(suc.top());
            suc.pop();
        }
    }
    for(int a:ans){
        cout<<a<<" ";
    }cout<<endl;
}

int main()
{
   closestKValues(root,target,k);
   
   return 0;
}